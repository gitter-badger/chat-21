require 'yaml'
yml_file = YAML::load_file('origin.yml')

str = "[老师]
喜欢小动物么？
[小明]
当然喜欢。
[老师]
喜欢到什么程度呢？
[小明]
怎么说呢，顿顿都有吧！！！
[老师]
“大家都知道叶公好龙的故事。大家知道这是什么时期的事？”
[小明]
“侏罗纪时期。”
[老师]
滚！
[老师]
地上的香蕉皮是谁吃的。。。
[小明]
老师，皮谁吃的不知道，香蕉我吃的。。。
[老师]
。。。。。。
[老师]
“一分耕耘一分收获。”
[小明]
“种下去是一分，拿出来也是一分，为什么还要耕耘？”
[老师]
“滚出去。。。”
[老师]
“将英语口语翻译成汉语时，老外的哪些发音不用翻译？”
[小明]
“打喷嚏、咳嗽、还有哭和笑。”
[老师]
“滚出去。。。”
[老师]
有什么东西把名字反过来就是他的用途？比如，牙刷， 刷牙！
[小明]
奶罩！
[老师]
滚出去！
[老师]
这节课我们来聊一聊骗子的骗人手段有哪些
[小红]
陌生人给糖你吃
[小强]
陌生人叫你上他的车
[小明]
今天大家放学后，老师给大家布置一点点，就一点点作业……
[老师]
滚出去！
[旁白]
学校要建游泳池，老师发动大家捐款。
[小明]
老师，我捐两桶水。
[老师]
......
[老师]
上课铃已经响了，难道你们没听见吗？
[小明]
哪次下课铃你听见了？
[老师]
......
[老师]
用“先……再……”造句。
[小明]
先生，再见。
[老师]
滚！
[老师]
用“要么……要么……”造句。
[小明]
买雪糕啦！要么？要么？
[老师]
滚！
[老师]
金钱与智慧，你们会选什么？
[小明]
我当然是要金钱！
[老师]
而我会选择智慧，你知道为什么吗？
[小明]
当然，人们都会选择自己缺少的东西，我能理解！
[老师]
滚！
[老师]
用“画蛇添足”造句。
[小明]
字母“S”和“Y”被银行的叔叔阿姨画蛇添足地写成了“＄”和“￥”。
[老师]
当别人已经不感兴趣，而他还是一个劲的讲下去的人，我们叫他什么？
[小明]
老师。
[老师]
滚！
[老师]
请把“我的哥哥去学校”这句话改成将来时。
[小明]
我哥哥的儿子去学校。
[老师]
滚！
[旁白]
老师正在上课等时候，发现小强在睡觉。老师叫旁边的小明把他叫醒。
[小明]
是你把他弄睡的，你自己叫！
[老师]
滚！
[老师]
用“但是”造句。
[小明]
鸭蛋是白色的。
[老师]
滚！
[老师]
爱迪生7岁的时候就能用镜子反光给他妈妈做手术了，你们10多岁了毛都不会。
[小明]
爱迪生20多岁的时候就是大发明家了，你今年多大啦！
[老师]
滚出去
[老师]
“你所遇到过的地域歧视是什么？”
[小明]
“56个民族，55个加分。”
[老师]
“同学们，今天体育老师生病不能来上课，体育改为数学。”
[小明]
“老师，体育老师长啥样，我们咋都没见过呢？”
[老师]
“滚出去！”
[旁白]
物理课上女老师抱怨穿丝袜总脱丝。
[小明]
“丝袜容易脱丝主要受到张力过大，产生了塑性形变～通俗来讲就是腿粗！”
[老师]
刚要开口……
[小明]
自觉地说“我出去……”
[老师]
“小明啊，老师总是上你滚出去，你是不去特恨老师啊！”
[小明]
“老师我一点都不恨您，我经常惹您生气，是我不对。”
[老师]
“不恨我就好，你可以滚出去了！”
[小明]
“……”
[老师]
“请用白日做梦造句，越短越好。”
[小明]
“白日？做梦！”
[老师]
“滚出去！”老师:“同学们，卫子夫其实是个很有名的历史人物，她还生了个千金，有谁知道叫什么吗?”
[小明]
“老师，我知道，我可以不用出去吗？”
[老师]
“你说得对就不用出去。”
[小明]
“卫生巾。”
[老师]
“滚……”
[老师]
“小明，你的梦想是什么呀？”
[小明]
“老师，我希望你以后再也不要让我滚出去。”
[老师]
“我以后不会了。”
[小明]
“老师你真好！我以后再也不往你杯子吐口水了。”
[旁白]
小明被抬出去了……
[老师]
用一句话来证明你是学渣。
[小明]
看看我的年级排名就知道有多少人参加考试。
[旁白]
老师让学生们写一篇关于人的作文，重点要写突出的地方。
[小明]
老师，我想好了！我就写我的奶奶。
[老师]
那你的奶奶有什么突出的方面吗？
[小明]
我奶奶腰间盘突出。
[老师]
……
[老师]
孔子是春秋时期鲁国人……（还没讲完）
[小明]
老师，那孔子在夏天和冬天是哪国人啊？
[老师]
滚出去！
[老师]
你为什么要趴在桌子上睡觉？
[小明]
老师，能躺的话，谁愿意趴着睡啊！
[老师]
滚出去！
[老师]
知道为什么叫你站起来回答问题吗？
[小明]
因为站起来说话不腰疼！
[老师]
滚出去！"

str = str.gsub(/\n/,'').gsub(/@/, '').gsub(/:/, '')
items = str.scan(/\[(.*?)\]([^\[]*)/)

items.each_with_index do |item, index|
  # p index
  # p item[0]
  # p item[1]

  item[1] = item[1].gsub(/^#{item[0]}/, '').gsub(/\d{2}\:\d{2}/, '')
  yml_file['scripts'][index]['npc'] = item[0]
  yml_file['scripts'][index]['sentences'][0]['text'] = item[1]

  p File.open('origin.yml', 'w') {|f| f.write yml_file.to_yaml }

  p '==============='
end
